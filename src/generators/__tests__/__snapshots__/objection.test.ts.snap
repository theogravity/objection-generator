// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ObjectionGenerator class should generate models 1`] = `
"import { Model } from 'objection'
import path from 'path'

import { BaseModel } from './BaseModel'

export enum PersonGenderEnum {
  MALE = 'Male',
  FEMALE = 'Female',
  OTHER = 'Other'
}

export class PersonModel extends BaseModel {
  id: string
  name: string
  age: number | null
  gender: PersonGenderEnum
  username: string
  excludedField: string

  static tableName = 'persons'

  static get jsonSchema () {
    return {
      type: 'object',
      required: ['name', 'username'],
      properties: {
        id: {
          type: 'string'
        },
        name: {
          type: 'string',
          minLength: 1,
          maxLength: 100
        },
        age: {
          type: ['number', 'null']
        },
        gender: {
          type: 'string',
          enum: ['Male', 'Female', 'Other'],
          default: 'Female'
        },
        username: {
          type: 'string',
          minLength: 1,
          maxLength: 25,
          nullable: false
        },
        excludedField: {
          type: 'string'
        }
      }
    }
  }

  static get relationMappings () {
    return {
      movies: {
        relation: Model.ManyToManyRelation,
        modelClass: path.join(__dirname, 'MovieModel'),
        join: {
          from: 'persons.id',
          through: {
            from: 'persons_movies.personId',
            to: 'persons_movies.movieId'
          },
          to: 'movies.id'
        }
      },
      reviews: {
        relation: Model.HasManyRelation,
        modelClass: path.join(__dirname, 'ReviewModel'),
        join: {
          from: 'persons.id',
          to: 'review.authorId'
        }
      }
    }
  }
}
"
`;
